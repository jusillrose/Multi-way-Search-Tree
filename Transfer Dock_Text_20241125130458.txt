import java.util.PriorityQueue;
import java.util.Scanner;

public class Hermanoche {

    public static void main(String[] args) {
        PriorityQueue<Task> taskHeap = new PriorityQueue<>(); 
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\n Menu:");
            System.out.println("1. Add Task");
            System.out.println("2. View Highest Priority Task");
            System.out.println("3. Remove Highest Priority Task");
            System.out.println("4. Exit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); 

            switch (choice) {
                case 1:
                    System.out.print("Enter description: ");
                    String description = scanner.nextLine();
                    System.out.print("Enter urgency (lower is higher priority): ");
                    int urgency = scanner.nextInt();
                    taskHeap.offer(new Task(description, urgency));
                    System.out.println("Task added.");
                    break;
                    
                case 2:
                    if (taskHeap.isEmpty()) {
                        System.out.println("No tasks queue.");
                    } else {
                        System.out.println("Highest Priority Task: " + taskHeap.peek());
                    }
                    break;
                    
                case 3:
                    if (taskHeap.isEmpty()) {
                        System.out.println("No tasks to remove.");
                    } else {
                        System.out.println("Removed task: " + taskHeap.poll());
                    }
                    break;
                    
                case 4:
                    System.out.println("Exiting Task Manager.");
                    scanner.close();
                    return;
                default:
                    System.out.println("This is Invalid choice. Please try again.");
            }
        }
    }


  public  static class Task implements Comparable<Task> {
        String description;
        int urgency;

        public Task(String description, int urgency) {
            this.description = description;
            this.urgency = urgency;
        }

        @Override
        public int compareTo(Task other) {
            return Integer.compare(this.urgency, other.urgency); 
        }

        @Override
        public String toString() {
            return "Description: " + description + ", Urgency: " + urgency;
        }
    }
}
